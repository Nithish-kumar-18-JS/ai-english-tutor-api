datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                Int                      @id @default(autoincrement())
  firebaseUid       String                   @unique
  email             String                   @unique
  name              String?
  picture           String?
  createdAt         DateTime                 @default(now())
  updatedAt         DateTime                 @updatedAt
  questions         OnBoardingQuestions[]
  savedWords        UserWords[]
  todaySessionWords TodaySessionVocabWords[]
}

model OnBoardingQuestions {
  id                       Int      @id @default(autoincrement())
  user                     User     @relation(fields: [userId], references: [id])
  userId                   Int
  english_proficiency_goal String
  why_are_learning_english String
  english_level            String
  time_spent_english       String
  streak_alerts            Boolean
  quick_challenge          String
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

model TodaySessionVocabWords {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  word      VocabuloryWords  @relation(fields: [wordId], references: [id])
  wordId    Int    
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VocabuloryWords {
  id               Int         @id @default(autoincrement())
  level            String
  word             String
  part_of_speech   String
  example_Sentence String
  phonetics_text   String
  phonetics_audio  String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  UserWords        UserWords[]
  TodaySessionVocabWords TodaySessionVocabWords[]
}

enum UserWordStatus {
  LEARNED
  SAVED
}

model UserWords {
  id        Int              @id @default(autoincrement())
  user      User             @relation(fields: [userId], references: [id])
  userId    Int
  word      VocabuloryWords  @relation(fields: [wordId], references: [id])
  wordId    Int
  status    UserWordStatus[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}
